pandas模块是基于numpy模块的一个开源模块，广泛应用与数据快速分析，
数据清洗和准备等工作，它的名字来源于"panel data“面板数据。

pandas模块提供了非常直观的数据结构及强大的数据管理和处理能力，
pandas模块可以看成python版的Excel。如果利用Anaconda安装
Python，则自带Pandas模块。

Pandas更擅长处理二维数据，其主要有Series和DataFrame两种
数据结构。Series很少单独使用，主要使用DataFrame

3.5.1 Series数据结构：
Series对象不仅包含数，还包含一组索引。
演示代码如下：
import pandas as pd
s = pd.Series(["A", "B", "C"])
运行结果：
0    A
1    B
2    C
dtype: object

3.5.2 二维数据表格DataFrame的创建与索引修改
DataFrame数据结构：一种二维表格数据结构，可以将其看成一个Excel表格。
语法：pandas.DataFrame(data=,index=,columns=,dtype=,copy=)
创建方法1：通过列表创建
import pandas as pd
d = pd.DataFrame([[1,2], [3,4], [5,6]])
print(a)
运行结果：
   0  1
0  1  2
1  3  4
2  5  6
创建方法2：通过字典创建DataFrame
字典创建DataFrame，默认以字典的键名为列索引
创建方法3：通过二维数组创建
2.DataFrame索引的修改
1）index.name可以修改行索引那一列的名称
2）rename()函数可以重命名索引名并创建一个新的DataFrame，inplace参数可以
   一步到位完成索引的重命名
3）reset_index()函数将行索引改为普通列
4) 把常规列改为行索引 set_index()

3.5.2 文件的读取和写入
pandas模块可以从各种格式文件中读取数据，也可以将处理后的数据写入这些文件中。
本节以Excel和CSV文件的读取和写入讲解具体方法。
1.excel文件读取
read_excel(io,#文件
           sheet_name=0,#用于指定工作表，也可以是数字（例如0指代第1个工作表)
           encoding用于指定文件的编码方式，一般认为UTF-8
           index_col用于设置索引列
           ,...)

2.csv文件读取
read_csv(io,#文件
         delimiter=None,#分隔符
         encoding=None,#文件编码格式
         index_col=None,#用于设置索引列
         )

3.5.3 数据的选取和处理
1)数据选则
2）数据计算
3）数据排序
4）数据删除

3.5.4 数据表的拼接
merge函数可以根据1个或多个同名的列将不同数据表中的行链接起来
如果同名的列不止一个，可以通道设置参数on指定按照哪一列进行合并，
默认的合并方式取交集(inner)，如果想取并集，可以设置参数how，
how=”outer“, how="left", how="inner", how="right"
如果想按照行索引进行合并，可以设置left_index和right_index。

concat()函数使用全链接方式完成拼接，它不需要对齐，而是直接进行合并
不需要由相同的列或索引。参数axis指定连接的轴向，该参数默认值为0，
指定按行方向连接（纵向拼接）

append()函数可以看成concat()函数的简化版，可以实现拼接












