3.4 数组计算的数学模块--NumPy
NumPy模块的名称是由"Numerical Python“缩写而来，
这个模块是一个运行速度非常快的数学模块，主要用于数组计算。
下面介绍NumPy模块的基本用法。

3.4.1 数组的基础知识
NumPy模块最大特点是引入数组的概念。
数组和列表有相似之处，遵循左闭右开的规则，这里对比一下主要差异点：
import numpy
a = [1,2,3,4]
b = numpy.array([1,2,3,4])
print(a)
print(b)
1）数组中的元素使用空格分隔，而列表中的元素使用逗号分隔。
   运行结果如下：
   a = [1,2,3,4]
   b = [1 2 3 4]
2）数组可以很好的支持数学运算，而列表不可以。
   c = a * 2
   d = b * 2
   运行结果如下：
   c = [1,2,3,4,1,2,3,4]
   d = [2,4,6,8]
3）数组可以是多维的，而列表只能嵌套，即大列表内嵌套小列表
   e = [[1,2], [1,2]]
   f = numpy.array([[1,2],[1,2]])
   运行结果：
   e = [[1,2], [1,2]]
   f = [[1 2]
        [3 4]]
3.4.2 数组的创建
左闭右开
方式1：numpy.array(列表)
     #例如：一维：numpy.array([1,2,3,4])
           二维：numpy.array([[1,2],[3,4]])
方式2：numpy.arange(start,stop,step).reshape(m,n,k)创建1，2，3维数组
     #例如：
     一维：
          numpy.arange(5) # [0 1 2 3 4]
          numpy.arange(5,10) #[5 6 7 8 9 10]
          numpy.arange(1,10,2) #[1 3 5 7 9]
     二维：
          numpy.arange(1,12).reshape(3,4) #3行4列的二维数组

方式3: numpy.random.randn(N) 创建一维数组，包含N个服从正态分布的N个随机数
方式4：numpy.random.randint(low,high,(m, n, k))生成随m*n*k维数组取值从low到high

